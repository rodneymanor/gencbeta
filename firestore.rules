rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Collections: Users can only access their own collections
    match /collections/{collectionId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Videos: Users can only access their own videos
    match /videos/{videoId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Allow users to read their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User profiles: Users can read their own profile, super admins can read/write all
    match /user_profiles/{profileId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.uid || 
         (resource != null && resource.data.role == 'super_admin' && request.auth.uid == resource.data.uid));
      allow create: if request.auth != null;
    }
    
    // Coach-creator relationships: Allow coaches and super admins to manage
    match /coach_creator_relationships/{relationshipId} {
      allow read, write: if request.auth != null;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 